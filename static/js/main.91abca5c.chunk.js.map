{"version":3,"sources":["logo.svg","Utils/colorTabler.js","Components/BoundComp/index.js","store.js","Components/ConfigInputs/index.js","Components/Select/index.js","Components/Colorer/index.js","Containers/Panel/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","colorTabler","fr","unt","separator","s","opac","res","i","push","val","opa","outer","BoundsExample","state","bounds","current","mouseOverHandler","ind","e","_this","setState","mouseOutHandler","_this2","this","props","data","react_default","a","createElement","Map","className","TileLayer","attribution","url","ukraine","features","map","el","check","filter","elem","name","properties","tableCheck","from","until","opacity","console","log","perem","Number","value","toString","length","elm","index","arr","GeoJSON","style","fillColor","color","fillOpacity","key","onMouseover","onMouseout","onClick","target","options","Component","connect","sample","reducers","combineReducers","arguments","undefined","prop","action","type","Object","objectSpread","JSON","parse","stringify","obj","store","createStore","ConfigInputs","property","comm","inpHandler","newState","submitHandler","preventDefault","Array","elements","forEach","Math","abs","setB","setP","onSubmit","keys","onChange","values","ukrs","unshift","Select","names","toConsumableArray","curName","curVal","error","selHandler","clickHandler","newNames","setD","defaultValue","visibility","background","Colorer","colorHandler","setC","Panel","src_Components_ConfigInputs","Components_Select","src_Components_Colorer","subscribe","getState","App","es","Components_BoundComp","src_Containers_Panel","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.91abca5c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const colorTabler = (fr, unt) => {\r\n  let separator = (unt - fr)/ 10\r\n  let s = fr\r\n  let opac = 0\r\n  let res = []\r\n  let i = 0\r\n  while(i++ < 10){\r\n    res.push({val: s, opa: opac})\r\n    s += separator\r\n    opac += 1/10\r\n  }\r\n  return res\r\n}\r\nexport default colorTabler\r\n","import React, { Component } from 'react'\r\nimport { Map, Rectangle, TileLayer, GeoJSON } from 'react-leaflet'\r\nimport \"./index.css\"\r\nimport 'leaflet/dist/leaflet.css'\r\nimport ukraine from '../../ukraine_geojson/Ukraine.json'\r\nimport { connect}   from 'react-redux';\r\nimport colorTabler from \"../../Utils/colorTabler.js\"\r\n\r\nlet mapStateToProps = state => ({\r\n  color: state.sample.color,\r\n  data: state.sample.data,\r\n  until: state.sample.until,\r\n  from: state.sample.from\r\n})\r\n\r\nconst outer = [[53.80065082633023, 41.74804687500001], [42.09822241118974, 20.566406250000004]]\r\n\r\ntype State = {\r\n  bounds: Array<[number, number]>,\r\n}\r\n\r\nclass BoundsExample extends Component<{}, State> {\r\n  state = {\r\n    bounds: outer,\r\n    current: null\r\n  }\r\n  mouseOverHandler = ind => e => {\r\n    this.setState({current: ind})\r\n  }\r\n  mouseOutHandler = e => {\r\n    this.setState({current: null})\r\n  }\r\n  render() {\r\n    let p = this.props\r\n    let s = this.state\r\n    let data = p.data\r\n    return (\r\n      <Map className=\"map\" bounds={this.state.bounds}>\r\n        <TileLayer\r\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {ukraine.features.map(\r\n          (el, ind) => {\r\n            // console.log(el.properties.name);\r\n            let check = p.data.filter(elem => elem.name === el.properties.name)[0]\r\n            let tableCheck = colorTabler(p.from, p.until)\r\n            let opacity = () => {\r\n                   console.log(\"TESTING2\", check)\r\n                   let perem = Number(check.value.toString()[0]+\"e\"+(check.value.toString().length - 1))\r\n                   return tableCheck.filter(\r\n                     (elm,index,arr) => {\r\n                       return elm.val === perem\r\n                     }\r\n                   )\r\n            }\r\n            console.log(\"TESTING\", check)\r\n            return (<GeoJSON style={ ()=>(\r\n              {fillColor: p.color,\r\n              color:  \"blue\",\r\n              fillOpacity: check ? opacity()[0] ? opacity()[0].opa : 0 : 0 ,\r\n              opacity: s.current === ind ? 0.8 : 0.1}\r\n            )\r\n          } key={ind}\r\n            onMouseover={this.mouseOverHandler(ind)}\r\n            onMouseout = {this.mouseOutHandler}\r\n            onClick ={e => {\r\n              console.log(e.target.options.data.properties.name)\r\n            }}\r\n            data={el} />)}\r\n        )}\r\n      </Map>\r\n    )\r\n  }\r\n}\r\nBoundsExample = connect(mapStateToProps,{})(BoundsExample)\r\nexport default BoundsExample\r\n","import { createStore, combineReducers } from 'redux';\r\n\r\nlet sampleReducer = (state = {from: 0, until: 0, color: \"#00ff00\", prop: \"\", data: []}, action) => {\r\n  if(action.type === \"SET_COLOR\") return {...(JSON.parse(JSON.stringify(state))), color: action.color}\r\n  if(action.type === \"SET_BORD\") return {...(JSON.parse(JSON.stringify(state))), from: action.obj.from, until: action.obj.until}\r\n  if(action.type === \"SET_PROP\") return {...(JSON.parse(JSON.stringify(state))), prop: action.val}\r\n  if(action.type === \"SET_DATA\") return {...(JSON.parse(JSON.stringify(state))), data: action.data}\r\n  return state\r\n}\r\nlet reducers = combineReducers({\r\n  sample: sampleReducer\r\n})\r\n\r\nconst store = createStore(reducers)\r\nlet setC = value => ({type: \"SET_COLOR\", color: value})\r\nlet setB = values => ({type: \"SET_BORD\", obj: values})\r\nlet setP = val => ({type: \"SET_PROP\", val: val})\r\nlet setD = data => ({type: \"SET_DATA\", data: data})\r\n\r\nexport {store, setC, setB, setP, setD}\r\n","import React, { Component } from 'react';\r\nimport \"./index.css\"\r\nimport { connect}   from 'react-redux';\r\nimport { setB, setP} from \"../../store.js\"\r\n\r\nclass ConfigInputs extends Component {\r\n  state = {\r\n      property: {\r\n        value: \"population\",\r\n        comm: \"Enter your property\",\r\n        type: \"text\"\r\n      },\r\n      from: {\r\n        value: 0,\r\n        comm: \"Enter lower bound\",\r\n        type: \"number\"\r\n      },\r\n      until: {\r\n        value: 100000,\r\n        comm: \"Enter upper bound\",\r\n        type: \"number\"\r\n      }\r\n  }\r\n  componentDidMount(){\r\n    let s = this.state\r\n    this.props.setB({until: s.until.value, from: s.from.value})\r\n    this.props.setP(s.property.value)\r\n  }\r\n  inpHandler = name => e => {\r\n      let newState = JSON.parse(JSON.stringify(this.state))\r\n      newState[name].value = e.target.value\r\n      this.setState(newState)\r\n  }\r\n  submitHandler = e => {\r\n    e.preventDefault()\r\n    let bounds = {}\r\n    let prop = \"\"\r\n    Array.from(e.target.elements).forEach(el => {\r\n      if(el.name === \"until\" || el.name === \"from\"){\r\n        bounds[el.name] = Math.abs(el.value)\r\n      } else {\r\n        if(el.name === \"property\")prop = el.value\r\n      }\r\n    })\r\n    if(bounds.until > bounds.from) {\r\n      this.props.setB(bounds)\r\n    }\r\n    this.props.setP(prop)\r\n  }\r\n\r\n  render(){\r\n    let s = this.state\r\n    return (\r\n        <div className=\"config_inputs\">\r\n          <form className=\"form\" onSubmit={this.submitHandler}>\r\n            {Object.keys(s).map((el,ind)=> (\r\n              <label key={ind}>\r\n                {s[el].comm}\r\n                <input name={el} key={ind} value={s[el].value} type={s[el].type}\r\n                  onChange={this.inpHandler(el)}/>\r\n              </label>\r\n            ))}\r\n            <button type=\"submit\">Confirm changes</button>\r\n          </form >\r\n        </div>\r\n    )\r\n  }\r\n}\r\nConfigInputs = connect(()=>({}), { setB, setP})(ConfigInputs)\r\n\r\nexport default ConfigInputs\r\n","import React, { Component } from 'react'\r\nimport ukraine from '../../ukraine_geojson/Ukraine.json'\r\nimport { connect}   from 'react-redux';\r\nimport { setD } from \"../../store.js\"\r\n\r\nlet ukrs = ukraine.features.map(el => ({name: el.properties.name, value: 0}))\r\nukrs.unshift({name: \"******\", value: 0})\r\n\r\nclass Select extends Component {\r\n  state = {\r\n    names: [...ukrs],\r\n    curName: \"\",\r\n    curVal: 0,\r\n    error: false\r\n  }\r\n  componentDidMount(){\r\n    this.props.setD(this.state.names)\r\n  }\r\n  inpHandler = e => {\r\n    if(e.target.value <= this.props.until && e.target.value >= this.props.from){\r\n      this.setState({...this.state, curVal: +e.target.value, error: false})\r\n    } else this.setState({...this.state, error: true})\r\n  }\r\n  selHandler = e => {\r\n    this.setState({...this.state, curName: e.target.value})\r\n  }\r\n  clickHandler = () => {\r\n    let s = this.state\r\n    if(s.curName ){\r\n      let newNames = s.names\r\n      newNames.map(el => {\r\n        if(el.name === s.curName){\r\n          el.value = s.curVal\r\n        }\r\n      })\r\n      this.setState({...this.state, names: newNames})\r\n      this.props.setD(newNames)\r\n    }\r\n  }\r\n  render(){\r\n    let s = this.state\r\n    return (\r\n      <div className=\"city_select\">\r\n        <select onChange={this.selHandler}>\r\n          {s.names.map((el,ind) =>(\r\n            <option key={ind} value={el.name}>{el.name}</option>\r\n          ))}\r\n        </select>\r\n        <input type=\"number\" defaultValue={s.curVal} onChange={this.inpHandler}/>\r\n        <button onClick={this.clickHandler}>Confirm</button>\r\n        <div style={{visibility: s.error ? \"visible\" : \"hidden\", background: \"red\"}}>Incorecct value</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nSelect = connect(state=>({until: state.sample.until, from: state.sample.from}), {setD})(Select)\r\nexport default Select\r\n","import React, { Component } from 'react';\r\nimport { connect}   from 'react-redux';\r\nimport colorTabler from \"../../Utils/colorTabler.js\"\r\nimport {setC} from \"../../store.js\"\r\nimport \"./index.css\"\r\n\r\nlet mapStateToProps = state => ({\r\n  until: state.sample.until,\r\n  from: state.sample.from,\r\n  color: state.sample.color,\r\n  prop: state.sample.prop\r\n})\r\n\r\nclass Colorer extends Component {\r\n  colorHandler = e => {\r\n    this.props.setC(e.target.value)\r\n  }\r\n  render(){\r\n    let p = this.props\r\n    return (\r\n      <div className=\"color_table\">\r\n        <ul className=\"table\">\r\n          {colorTabler(+p.from, +p.until).map((el,ind) => (\r\n            <li >\r\n              <label >{p.prop} : {el.val}</label>\r\n              <div className=\"cell\" style={{background: p.color, opacity: el.opa}}></div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <input type=\"color\" defaultValue={p.color} onChange={this.colorHandler}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nColorer = connect(mapStateToProps, {setC})(Colorer)\r\nexport default Colorer\r\n","import React, { Component } from 'react';\r\nimport \"./index.css\"\r\nimport ukraine from '../../ukraine_geojson/Ukraine.json'\r\nimport ConfigInputs from \"../../Components/ConfigInputs/index.js\"\r\nimport Select from \"../../Components/Select/index.js\"\r\nimport Colorer from \"../../Components/Colorer/index.js\"\r\n\r\n//from-until Component\r\n//select Component\r\n//Line Component\r\n\r\nclass Panel extends Component {\r\n  render(){\r\n    return (\r\n      <div className=\"panel\">\r\n        <ConfigInputs />\r\n        <Select />\r\n        <Colorer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Panel\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport BoundsExample from \"./Components/BoundComp/index.js\"\nimport Panel from \"./Containers/Panel/index.js\"\nimport {Provider} from 'react-redux';\nimport {store} from \"./store.js\"\n\nstore.subscribe(()=> console.log(store.getState()))\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Provider store={store}>\n          <BoundsExample />\n          <Panel />\n        </Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}